{"version":3,"sources":["services/persons.js","components/Entry.js","components/Entries.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Entry","entry","deleteEntry","name","number","onClick","Entries","entriesToShow","setPersons","map","key","find","e","window","confirm","personService","filter","PersonForm","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","value","onChange","type","Filter","Notification","message","className","console","log","App","useState","persons","setNewName","setNewNumber","filteredName","setFilteredName","showAll","setShowAll","msg","setMessage","msgClasses","setMsgClasses","useEffect","initialPersons","person","toLowerCase","indexOf","event","target","preventDefault","some","trim","p","updatedPerson","returnedPerson","catch","error","setTimeout","nameObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e1a3305.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteEntry = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deleteEntry, update }","import React from 'react';\r\n\r\nconst Entry = ( {entry, deleteEntry} ) =>  (\r\n    <li>\r\n        {entry.name} {entry.number}\r\n        <button onClick={deleteEntry}>Delete</button>\r\n    \r\n    </li>\r\n)\r\n\r\n\r\nexport default Entry","import React from 'react';\r\nimport Entry from './Entry'\r\nimport personService from './../services/persons'\r\n\r\n\r\nconst Entries = ({entriesToShow, setPersons}) => {\r\n  \r\n  const deleteEntry = id => {\r\n    const entry = entriesToShow.find(e => e.id === id)\r\n    const result = window.confirm(`Delete ${entry.name}?`)\r\n\r\n    if (result){\r\n      personService\r\n        .deleteEntry(id)\r\n        .then(response => {\r\n          setPersons(entriesToShow.filter(e => e.id !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    entriesToShow.map(entry => \r\n      <Entry \r\n        key={entry.id}\r\n        entry={entry}\r\n        deleteEntry={() => deleteEntry(entry.id)}\r\n      />\r\n    )\r\n  )\r\n  \r\n}\r\n\r\n\r\n  \r\n\r\n\r\nexport default Entries","import React from 'react'\r\n\r\n\r\nconst PersonForm = ( {\r\n   onSubmit,\r\n   newName, \r\n   handleNameChange,\r\n   newNumber,\r\n   handleNumberChange} ) => (\r\n     \r\n  <form onSubmit={onSubmit}>\r\n        <div>\r\n          name: <input \r\n            value={newName}\r\n            onChange={handleNameChange}\r\n            />\r\n        </div>\r\n        <div>\r\n          number: <input \r\n            value={newNumber}\r\n            onChange={handleNumberChange}\r\n            />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n)\r\n\r\nexport default PersonForm","import React from 'react';\r\n\r\nconst Filter = ( {value, onChange} ) => (\r\n  <div>Filter shown with:\r\n    <input \r\n        value={value}\r\n        onChange={onChange}/>\r\n  </div>\r\n)\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst Notification = ( {message, className}) => {\r\n  if (message === null){\r\n    return null\r\n  }\r\n    console.log(className)\r\n return (\r\n    <div className={className}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nimport Entries from './components/Entries'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filteredName, setFilteredName ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [ msg, setMessage] = useState('')\n  const [ msgClasses, setMsgClasses ] = useState('')\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then( initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  \n  const entriesToShow = showAll\n    ? persons\n    : persons.filter( person =>     person.name.toLowerCase().indexOf(filteredName.toLowerCase()) !== -1\n    )\n  \n    // helpers functions\n  const handleFilterEntry = event => {\n    setFilteredName(event.target.value)\n    \n    if (filteredName){setShowAll(false)}\n    else(setShowAll(true))    \n  }\n\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = event => setNewNumber(event.target.value)\n\n  const addEntry = (event) => {\n    event.preventDefault()\n   \n    // check if name already on the list\n    if (persons.some(person => person.name === newName.trim())){\n      const confirmed = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      \n      if (confirmed){\n        // update existing record\n        const person = persons.find(p => p.name === newName.trim())\n\n        const updatedPerson = { ...person, number:newNumber.trim()}\n\n        personService\n          .update(person.id, updatedPerson)\n            .then(returnedPerson => {\n              setPersons(persons.map(person => person.name !== newName ? person : returnedPerson))\n\n              setMessage(`${person.name}'s number was updated.`)\n              setMsgClasses('notification successful')\n            })\n            .catch(error => {\n              setMessage(`Information of ${person.name} has already been removed from server`)\n              setMsgClasses('notification error')\n            })\n                \n        setTimeout(() => {\n          setMessage(null)\n          setMsgClasses('')\n        },5000)\n      }\n      \n    } else {\n      // add new name\n      const nameObject = {\n        name: newName.trim(),\n        number: newNumber.trim()\n      }\n      \n      personService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n\n          setMessage(`Added ${newName} `)\n          setMsgClasses('notification successful')\n          setTimeout(() => {\n            setMessage(null)\n            setMsgClasses('')\n          },5000)\n        })\n        .catch(error => {\n          setMessage(error.response.data.error)\n          setMsgClasses('notification error')\n          setTimeout(() => {\n            setMessage(null)\n            setMsgClasses('')\n          },5000)\n        })    \n    }\n  } \n       \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification \n        message={msg}\n        className={msgClasses}\n\n      />\n      <Filter \n        value={filteredName}\n        onChange={handleFilterEntry}\n      />\n      \n      <h3>add a new entry</h3>\n      <PersonForm \n        onSubmit={addEntry}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      \n      <h2>Numbers</h2>\n      <Entries \n        entriesToShow={entriesToShow}\n        setPersons={setPersons}         \n      />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}